snippet /**
/** $1
 *
 * $2
 */
endsnippet

snippet /class
/** @class $1
 *
 * $2
 */
endsnippet

snippet /enum
/** @enum $1
 *
 * $2
 */
endsnippet

snippet /file
/** @file $1
 */
endsnippet

snippet /fn
/** @fn $1
 *
 * $2
 */
endsnippet

snippet class
class ${1:Name}
{
private:
	$2

public:
	$1  ();
	~$1 ();
	$3
};
endsnippet

snippet def
#define $1
endsnippet

snippet for
for (${1:typename} ${2:id} = ${3:value}; $2 ${4:stop condition}; $2)
	${5:body}
endsnippet

snippet forit
for (auto it = $1.begin(); it != $1.end(); ++it)
	$2
endsnippet

snippet forcit
for (auto it = $1.cbegin(); it != $1.cend(); ++it)
	$2
endsnippet

snippet i
#include "$1"
endsnippet

snippet it
#include <$1>
endsnippet

snippet ifndef
#ifndef $1
#define $1

$2

#endif
endsnippet

snippet main
int main (${1:int argc, char ** argv})
{
	$2

	return 0;
}
endsnippet
